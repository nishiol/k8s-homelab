apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      nodeSelector: {{- toYaml .Values.nodeSelector | nindent 8 }}
      securityContext:
        fsGroup: 1000
      containers:
        - name: qbittorrent
          image: "linuxserver/qbittorrent:{{ .Values.qbittorrent.imageTag }}"
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 6881
              protocol: UDP
            - containerPort: 6881
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config
              subPath: qbittorrent
            - name: media
              mountPath: /data
            {{- if .Values.additionalVolumeMounts }}
              {{- toYaml .Values.additionalVolumeMounts | nindent 12 }}
            {{- end }}
        - name: sonarr
          image: "linuxserver/sonarr:{{ .Values.sonarr.imageTag }}"
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
            - containerPort: 8989
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config
              subPath: sonarr
            - name: media
              mountPath: /data
            {{- if .Values.additionalVolumeMounts }}
              {{- toYaml .Values.additionalVolumeMounts | nindent 12 }}
            {{- end }}
        - name: radarr
          image: "linuxserver/radarr:{{ .Values.radarr.imageTag }}"
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
            - containerPort: 7878
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config
              subPath: radarr
            - name: media
              mountPath: /data
            {{- if .Values.additionalVolumeMounts }}
              {{- toYaml .Values.additionalVolumeMounts | nindent 12 }}
            {{- end }}
        - name: jellyfin
          image: "linuxserver/jellyfin:{{ .Values.jellyfin.imageTag }}"
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: JELLYFIN_PublishedServerUrl
              value: "https://{{ .Values.jellyfin.hostName }}"
            - name: DOCKER_MODS
              value: "linuxserver/mods:jellyfin-opencl-intel"
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-proxy
          ports:
            - containerPort: 8096
              protocol: TCP
            - containerPort: 7359
              protocol: UDP
          volumeMounts:
            - name: config
              mountPath: /config
              subPath: jellyfin
            - name: media
              mountPath: /data
            - name: dri
              mountPath: /dev/dri
            - name: transcodes
              mountPath: /config/cache/transcodes
            {{- if .Values.additionalVolumeMounts }}
              {{- toYaml .Values.additionalVolumeMounts | nindent 12 }}
            {{- end }}
          securityContext:
            privileged: true
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-config
        - name: media
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-media
        - name: dri
          hostPath:
            path: /dev/dri
        - name: transcodes
          emptyDir:
            medium: Memory
            sizeLimit: {{ .Values.jellyfin.transcodeCacheSize }}
        {{- if .Values.additionalVolumeMounts }}
          {{- toYaml .Values.additionalVolumes | nindent 8 }}
        {{- end }}